#include <stdio.h>
#include <stdlib.h>

#include <string.h>
#include <unistd.h>

/*
void readLine( char *a, int ppid) {
  pid_t pid;
  pid = fork();
  if( pid != ppid ) {
    char *s;
    char *command[20];
    int i = 0;
    a = strsep(&a, "\n");
    while(a != NULL){
      s = strsep(&a, " ");
      command[i] = s;
      i++;
    }
    command[i] = 0; //terminating null;
    execvp(command[0], command);
    _exit(0);
  }
  else {
    //wait(1);
    printf("ggggg\n");
    return;
  }
}

void readMulti() {
  printf("What would you like to do? ");
  char *a = calloc(1,256);
  fgets (a, 255, stdin);
  char *s;
  char *command[20];
  int i = 0;
  a = strsep(&a, "\n");
  while(a != NULL){
    s = strsep(&a, ";");
    command[i] = s;
    i++;
  }
  command[i] = 0;
  i = 0;
  while( command[i] ) {
    printf("\n%s\n", command[i]);
    readLine(command[i], getpid());
    i++;
  }
  free(a);
}
*/

void cmdline2( char *a, int ppid ) {
  pid_t pid;
  pid = fork();
  if( pid != ppid ) {
    char *s;
    char *command[20];
    int i = 0;
    a = strsep(&a, "\n");
    while(a != NULL){
      s = strsep(&a, " ");
      command[i] = s;
      i++;
    }
    command[i] = 0; //terminating null;
    execvp(command[0], command);
    _exit(0);
  }
  else {
    //wait(1);
    printf("ggggg\n");
    return;
  }
}

void cmdline() {

  printf("What would you like to do? ");
  char *a = calloc(1,256);
  fgets (a, 255, stdin);
  char *s;
  char *command[20];
  int i = 0;
  a = strsep(&a, "\n");
  while(a != NULL){
    s = strsep(&a, "; ");
    command[i] = s;
    i++;
  }
  for( i=0; command[i]; i++ ) {
    printf("%s\n",command[i]);
    cmdline2( command[i], getpid() );
  }
  free(a);
  /*
  command[i] = 0; //terminating null;
  execvp(command[0], command);
  */

}

int main() {
  cmdline();
  return 0;
}
